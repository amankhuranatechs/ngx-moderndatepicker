{"version":3,"file":"ngx-moderndatepicker.umd.js","sources":["ng://ngx-moderndatepicker/lib/ngx-moderndatepicker.service.ts","ng://ngx-moderndatepicker/lib/ngx-moderndatepicker.component.ts","ng://ngx-moderndatepicker/lib/ngx-moderndatepicker.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxModerndatepickerService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, ElementRef, HostListener, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport {\n  startOfMonth,\n  endOfMonth,\n  addMonths,\n  subMonths,\n  setYear,\n  eachDay,\n  getDate,\n  getMonth,\n  getYear,\n  isToday,\n  isSameDay,\n  isSameMonth,\n  isSameYear,\n  format,\n  getDay,\n  subDays,\n  setDay,\n  addYears,\n  subYears,\n  setMonth,\n  isWithinRange\n} from 'date-fns';\n\nexport type AddClass = string | string[] | { [k: string]: boolean } | null;\n\nexport interface DatepickerOptions {\n  minYear?: number; // default: current year - 30\n  maxYear?: number; // default: current year + 30\n  displayFormat?: string; // default: 'MMM D[,] YYYY'\n  barTitleFormat?: string; // default: 'MMMM YYYY'\n  dayNamesFormat?: string; // default 'ddd'\n  monthNamesFormat?: string; // default 'MMM'\n  barTitleIfEmpty?: string;\n  firstCalendarDay?: number; // 0 = Sunday (default), 1 = Monday, ..\n  locale?: object;\n  minDate?: Date;\n  maxDate?: Date;\n  /** Placeholder for the input field */\n  placeholder?: string;\n  /** [ngClass] to add to the input field */\n  addClass?: AddClass;\n  /** [ngStyle] to add to the input field */\n  addStyle?: { [k: string]: any } | null;\n  /** ID to assign to the input field */\n  fieldId?: string;\n  /** If false, barTitleIfEmpty will be disregarded and a date will always be shown. Default: true */\n  useEmptyBarTitle?: boolean;\n  weekendsDay?: number[];\n   /** Sunday is 0 , Highlights the weekends with gray background**/\n  holidayList?: Array<Date>;\n  /** List of Holidays **/\n}\n\n// Counter for calculating the auto-incrementing field ID\nlet counter = 0;\n\n/**\n * Internal library helper that helps to check if value is empty\n * @param value\n */\nconst isNil = (value: Date | DatepickerOptions) => {\n  return (typeof value === 'undefined') || (value === null);\n};\n\n@Component({\n  selector: 'ngx-moderndatepicker',\n  templateUrl: 'ngx-moderndatepicker.component.html',\n  styleUrls: ['ngx-moderndatepicker.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxModerndatepickerComponent), multi: true }\n  ]\n})\nexport class NgxModerndatepickerComponent implements OnInit {\n@Input() options: DatepickerOptions;\n\n  /**\n   * Disable datepicker's input\n   */\n  @Input() headless = false;\n\n  /**\n   * Set datepicker's visibility state\n   */\n  @Input() isOpened = false;\n\n  /**\n   * Datepicker dropdown position\n   */\n  @Input() position = 'bottom-right';\n\n  private positions = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n\n  innerValue: Date;\n  displayValue: string;\n  displayFormat: string;\n  date: Date;\n  barTitle: string;\n  barTitleFormat: string;\n  barTitleIfEmpty: string;\n  minYear: number;\n  maxYear: number;\n  firstCalendarDay: number;\n  view: string;\n  years: { year: number; isThisYear: boolean }[];\n  dayNames: string[];\n  monthNames: Array<any>;\n  dayNamesFormat: string;\n  monthNamesFormat: string;\n  scrollOptions: any;\n  days: {\n    date: Date;\n    day: number;\n    month: number;\n    year: number;\n    inThisMonth: boolean;\n    isToday: boolean;\n    isSelected: boolean;\n    isSelectable: boolean;\n    isWeekend: boolean;\n    isHoliday: boolean;\n  }[];\n  locale: object;\n  placeholder: string;\n  addClass: AddClass;\n  addStyle: { [k: string]: any } | null;\n  fieldId: string;\n  useEmptyBarTitle: boolean;\n  disabled: boolean;\n\n  private onTouchedCallback: () => void = () => { };\n  private onChangeCallback: (_: any) => void = () => { };\n\n  public setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  get value(): Date {\n    return this.innerValue;\n  }\n\n  set value(val: Date) {\n    this.innerValue = val;\n    this.onChangeCallback(this.innerValue);\n  }\n\n  constructor(private elementRef: ElementRef) {\n    this.scrollOptions = {\n      barBackground: '#DFE3E9',\n      gridBackground: '#FFFFFF',\n      barBorderRadius: '3',\n      gridBorderRadius: '3',\n      barWidth: '6',\n      gridWidth: '6',\n      barMargin: '0',\n      gridMargin: '0'\n    };\n  }\n\n  ngOnInit() {\n    this.view = 'year';\n    this.date = new Date();\n    this.setOptions();\n    this.initDayNames();\n    this.initYears();\n    this.initMonthName();\n\n    // Check if 'position' property is correct\n    if (this.positions.indexOf(this.position) === -1) {\n      throw new TypeError(`ng-moderndatepicker: invalid position property value '${this.position}' (expected: ${this.positions.join(', ')})`);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('options' in changes) {\n      this.setOptions();\n      this.initDayNames();\n      this.init();\n      this.initYears();\n    }\n  }\n\n  get defaultFieldId(): string {\n    // Only evaluate and increment if required\n    const value = `datepicker-${counter++}`;\n    Object.defineProperty(this, 'defaultFieldId', {value});\n\n    return value;\n  }\n\n  setOptions(): void {\n    const today = new Date(); // this const was added because during my tests, I noticed that at this level this.date is undefined\n    this.minYear = this.options && this.options.minYear || getYear(today) - 30;\n    this.maxYear = this.options && this.options.maxYear || getYear(today) + 30;\n    this.displayFormat = this.options && this.options.displayFormat || 'MMM D[,] YYYY';\n    this.barTitleFormat = this.options && this.options.barTitleFormat || 'YYYY';\n    this.dayNamesFormat = this.options && this.options.dayNamesFormat || 'ddd';\n    this.monthNamesFormat = this.options && this.options.monthNamesFormat || 'MMM';\n    this.barTitleIfEmpty = this.options && this.options.barTitleIfEmpty || 'Click to select a date';\n    this.firstCalendarDay = this.options && this.options.firstCalendarDay || 0;\n    this.locale = this.options && { locale: this.options.locale } || {};\n    this.placeholder = this.options && this.options.placeholder || '';\n    this.addClass = this.options && this.options.addClass || {};\n    this.addStyle = this.options && this.options.addStyle || {};\n    this.fieldId = this.options && this.options.fieldId || this.defaultFieldId;\n    this.useEmptyBarTitle = this.options && 'useEmptyBarTitle' in this.options ? this.options.useEmptyBarTitle : true;\n  }\n\n  nextYear(): void {\n    this.date = addYears(this.date, 1);\n    this.init();\n    this.initMonthName();\n\n  }\n\n  prevYear(): void {\n    this.date = subYears(this.date, 1);\n    this.init();\n    this.initMonthName();\n\n  }\n\n  setDate(i: number): void {\n    this.date = this.days[i].date;\n    this.value = this.date;\n    this.init();\n    this.close();\n  }\n\n  setYear(i: number): void {\n    this.date = setYear(this.date, this.years[i].year);\n    this.init();\n    this.view = 'year';\n  }\n\n  selectMonth(i: number): void {\n    this.date = setMonth(this.date,i);\n    this.init();\n    this.initMonthName();\n    this.view = 'year';\n  }\n  /**\n   * Checks if specified date is in range of min and max dates\n   * @param date\n   */\n  private isDateSelectable(date: Date): boolean {\n    if (isNil(this.options)) {\n      return true;\n    }\n\n    const minDateSet = !isNil(this.options.minDate);\n    const maxDateSet = !isNil(this.options.maxDate);\n\n    const timestamp = date.valueOf();\n\n    if (minDateSet && (timestamp < this.options.minDate.valueOf())) {\n      return false;\n    }\n\n    if (maxDateSet && (timestamp > this.options.maxDate.valueOf())) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private isWeekendDay (date: Date): boolean {\n    const weekendsDay = Array.isArray(this.options.weekendsDay);\n    if(weekendsDay) {\n      return this.options.weekendsDay.indexOf(getDay(date)) != -1 ? true : false;\n    }\n\n    return false;\n  }\n\n  private isHoliday (date: Date): boolean {\n    const areHolidays = Array.isArray(this.options.holidayList);\n    if(areHolidays) {\n      return (this.options.holidayList.filter((day)=> isSameDay(day,date))).length ? true : false;\n    }\n\n    return false;\n  }\n\n  init(): void {\n    // this.date may be null after .reset(); fall back to current date.\n    const actualDate = this.date || new Date();\n    const start = startOfMonth(actualDate);\n    const end = endOfMonth(actualDate);\n\n    this.days = eachDay(start, end).map(date => {\n      return {\n        date: date,\n        day: getDate(date),\n        month: getMonth(date),\n        year: getYear(date),\n        inThisMonth: true,\n        isToday: isToday(date),\n        isSelected: isSameDay(date, this.innerValue) && isSameMonth(date, this.innerValue) && isSameYear(date, this.innerValue),\n        isSelectable: this.isDateSelectable(date),\n        isWeekend: this.isWeekendDay(date),\n        isHoliday: this.isHoliday(date)\n      };\n    });\n\n    const tmp = getDay(start) - this.firstCalendarDay;\n    const prevDays = tmp < 0 ? 7 - this.firstCalendarDay : tmp;\n\n    for (let i = 1; i <= prevDays; i++) {\n      const date = subDays(start, i);\n      this.days.unshift({\n        date: date,\n        day: getDate(date),\n        month: getMonth(date),\n        year: getYear(date),\n        inThisMonth: false,\n        isToday: isToday(date),\n        isSelected: isSameDay(date, this.innerValue) && isSameMonth(date, this.innerValue) && isSameYear(date, this.innerValue),\n        isSelectable: this.isDateSelectable(date),\n        isWeekend : this.isWeekendDay(date),\n        isHoliday: this.isHoliday(date)\n      });\n    }\n\n    if (this.innerValue) {\n      this.displayValue = format(this.innerValue, this.displayFormat, this.locale);\n      this.barTitle = format(start, this.barTitleFormat, this.locale);\n    } else {\n      this.displayValue = '';\n      this.barTitle = this.useEmptyBarTitle ? this.barTitleIfEmpty : format(start, this.barTitleFormat, this.locale);\n    }\n  }\n\n  initYears(): void {\n    const range = this.maxYear - this.minYear;\n    this.years = Array.from(new Array(range), (x, i) => i + this.minYear).map(year => {\n      return {\n        year: year,\n        isThisYear: year === getYear(this.date),\n        isToday : year === getYear(new Date()),\n        isSelectable: this.isYearSelectable(year)\n        };\n    });\n  }\n\n  private isYearSelectable(date: any) : boolean {\n     const minDate = isNil(this.options.minDate) ? false : this.options.minDate;\n     const maxDate = isNil(this.options.maxDate) ? false : this.options.maxDate;\n\n     if ( minDate && maxDate ) {\n       return minDate.getFullYear() <= date && date <= maxDate.getFullYear();\n     } else if (minDate) {\n       return  minDate.getFullYear() <= date;\n     } else if (maxDate) {\n        return  date <= maxDate.getFullYear();\n     }\n     return true;\n  }\n\n  initDayNames(): void {\n    this.dayNames = [];\n    const start = this.firstCalendarDay;\n    for (let i = start; i <= 6 + start; i++) {\n      const date = setDay(new Date(), i);\n      this.dayNames.push(format(date, this.dayNamesFormat, this.locale));\n    }\n  }\n\n  initMonthName(): void {\n    let monthNames = [];\n    let currentDate = new Date(this.date);\n    const start = subYears(currentDate.setMonth(11),1);\n    for (let i = 1; i <= 12 ; i++) {\n      const date = addMonths(start, i);\n      monthNames.push({\n        name: format(date, this.monthNamesFormat, this.locale),\n        isSelected: date.getMonth() === this.date.getMonth(),\n        isThisMonth: isSameMonth(date,new Date()) && isSameYear(this.date,new Date()),\n        isSelectable: this.isMonthSelectable(date)\n      });\n    }\n    this.monthNames = monthNames;\n  }\n\n  private isMonthSelectable(date: Date): boolean {\n\n      const minDate = isNil(this.options.minDate) ? false : this.options.minDate;\n      const maxDate = isNil(this.options.maxDate) ? false : this.options.maxDate;\n\n      if ( minDate && maxDate ) {\n        if(minDate.getFullYear() < date.getFullYear() && date.getFullYear() < maxDate.getFullYear()){\n            return true;\n        } else if (minDate.getFullYear() < date.getFullYear() && date.getFullYear() == maxDate.getFullYear()){\n            if(date.getMonth() <= maxDate.getMonth()){\n              return true;\n            } else { return false;}\n        } else if (minDate.getFullYear() == date.getFullYear() && date.getFullYear() < maxDate.getFullYear()){\n            if(minDate.getMonth() <= date.getMonth()){\n              return true;\n            } else { return false;}\n        } else if (minDate.getFullYear() == date.getFullYear() && date.getFullYear() == maxDate.getFullYear()){\n            if(minDate.getMonth() <= date.getMonth() && date.getMonth() <= maxDate.getMonth()){\n              return true;\n            } else { return false;}\n        } else {\n             return false;\n        }\n      } else if (minDate) {\n        if(minDate.getFullYear() < date.getFullYear()){\n            return true;\n        } else if (minDate.getFullYear() == date.getFullYear()){\n            if(minDate.getMonth() <= date.getMonth()){\n              return true;\n            } else { return false;}\n        } else {\n             return false;\n        }\n      } else if (maxDate) {\n         if(date.getFullYear() < maxDate.getFullYear()){\n             return true;\n         } else if (date.getFullYear() == maxDate.getFullYear()){\n             if(date.getMonth() <= maxDate.getMonth()){\n               return true;\n             } else { return false;}\n         } else {\n              return false;\n         }\n      }\n\n    return true;\n  }\n\n  toggleView(): void {\n    this.view = this.view === 'year' ? 'years' : 'year';\n  }\n\n  toggle(): void {\n    this.isOpened = !this.isOpened;\n\n    if (!this.isOpened && this.view === 'years') {\n      this.toggleView();\n    }\n  }\n\n  close(): void {\n    this.isOpened = false;\n\n    if (this.view === 'years') {\n      this.toggleView();\n    }\n  }\n\n  reset(fireValueChangeEvent = false): void {\n    this.date = null;\n    this.innerValue = null;\n    this.init();\n    if (fireValueChangeEvent && this.onChangeCallback) {\n      this.onChangeCallback(this.innerValue);\n    }\n  }\n\n  writeValue(val: Date) {\n    if (val) {\n      this.date = val;\n      this.innerValue = val;\n      this.init();\n      this.displayValue = format(this.innerValue, this.displayFormat, this.locale);\n      this.barTitle = format(startOfMonth(val), this.barTitleFormat, this.locale);\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  @HostListener('document:click', ['$event']) onBlur(e: MouseEvent) {\n    if (!this.isOpened) {\n      return;\n    }\n\n    const input = this.elementRef.nativeElement.querySelector('.ngx-moderndatepicker-input');\n\n    if (input == null) {\n      return;\n    }\n\n    if (e.target === input || input.contains(<any>e.target)) {\n      return;\n    }\n\n    const container = this.elementRef.nativeElement.querySelector('.ngx-moderndatepicker-calendar-container');\n    if (container && container !== e.target && !container.contains(<any>e.target) && !(<any>e.target).classList.contains('year-unit') && !(<any>e.target).classList.contains('month-unit')) {\n      this.close();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { NgxModerndatepickerComponent } from './ngx-moderndatepicker.component';\n\n\n@NgModule({\n  declarations: [NgxModerndatepickerComponent],\n  imports: [\n   CommonModule,\n   BrowserModule,\n   FormsModule\n  ],\n  exports: [NgxModerndatepickerComponent]\n})\nexport class NgxModerndatepickerModule { }\n"],"names":["Injectable","getYear","addYears","subYears","setYear","setMonth","getDay","isSameDay","startOfMonth","endOfMonth","eachDay","getDate","getMonth","isToday","isSameMonth","isSameYear","subDays","format","setDay","addMonths","Component","NG_VALUE_ACCESSOR","forwardRef","ElementRef","Input","HostListener","NgModule","CommonModule","BrowserModule","FormsModule"],"mappings":"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"}