{"version":3,"file":"ngx-moderndatepicker.js","sources":["ng://ngx-moderndatepicker/lib/ngx-moderndatepicker.service.ts","ng://ngx-moderndatepicker/lib/ngx-moderndatepicker.component.ts","ng://ngx-moderndatepicker/lib/ngx-moderndatepicker.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxModerndatepickerService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, ElementRef, HostListener, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport {\n  startOfMonth,\n  endOfMonth,\n  addMonths,\n  subMonths,\n  setYear,\n  eachDay,\n  getDate,\n  getMonth,\n  getYear,\n  isToday,\n  isSameDay,\n  isSameMonth,\n  isSameYear,\n  format,\n  getDay,\n  subDays,\n  setDay,\n  addYears,\n  subYears,\n  setMonth,\n  isWithinRange\n} from 'date-fns';\n\nexport type AddClass = string | string[] | { [k: string]: boolean } | null;\n\nexport interface DatepickerOptions {\n  minYear?: number; // default: current year - 30\n  maxYear?: number; // default: current year + 30\n  displayFormat?: string; // default: 'MMM D[,] YYYY'\n  barTitleFormat?: string; // default: 'MMMM YYYY'\n  dayNamesFormat?: string; // default 'ddd'\n  monthNamesFormat?: string; // default 'MMM'\n  barTitleIfEmpty?: string;\n  firstCalendarDay?: number; // 0 = Sunday (default), 1 = Monday, ..\n  locale?: object;\n  minDate?: Date;\n  maxDate?: Date;\n  /** Placeholder for the input field */\n  placeholder?: string;\n  /** [ngClass] to add to the input field */\n  addClass?: AddClass;\n  /** [ngStyle] to add to the input field */\n  addStyle?: { [k: string]: any } | null;\n  /** ID to assign to the input field */\n  fieldId?: string;\n  /** If false, barTitleIfEmpty will be disregarded and a date will always be shown. Default: true */\n  useEmptyBarTitle?: boolean;\n  weekendsDay?: number[];\n   /** Sunday is 0 , Highlights the weekends with gray background**/\n  holidayList?: Array<Date>;\n  /** List of Holidays **/\n}\n\n// Counter for calculating the auto-incrementing field ID\nlet counter = 0;\n\n/**\n * Internal library helper that helps to check if value is empty\n * @param value\n */\nconst isNil = (value: Date | DatepickerOptions) => {\n  return (typeof value === 'undefined') || (value === null);\n};\n\n@Component({\n  selector: 'ngx-moderndatepicker',\n  templateUrl: 'ngx-moderndatepicker.component.html',\n  styleUrls: ['ngx-moderndatepicker.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxModerndatepickerComponent), multi: true }\n  ]\n})\nexport class NgxModerndatepickerComponent implements OnInit {\n@Input() options: DatepickerOptions;\n\n  /**\n   * Disable datepicker's input\n   */\n  @Input() headless = false;\n\n  /**\n   * Set datepicker's visibility state\n   */\n  @Input() isOpened = false;\n\n  /**\n   * Datepicker dropdown position\n   */\n  @Input() position = 'bottom-right';\n\n  private positions = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n\n  innerValue: Date;\n  displayValue: string;\n  displayFormat: string;\n  date: Date;\n  barTitle: string;\n  barTitleFormat: string;\n  barTitleIfEmpty: string;\n  minYear: number;\n  maxYear: number;\n  firstCalendarDay: number;\n  view: string;\n  years: { year: number; isThisYear: boolean }[];\n  dayNames: string[];\n  monthNames: Array<any>;\n  dayNamesFormat: string;\n  monthNamesFormat: string;\n  scrollOptions: any;\n  days: {\n    date: Date;\n    day: number;\n    month: number;\n    year: number;\n    inThisMonth: boolean;\n    isToday: boolean;\n    isSelected: boolean;\n    isSelectable: boolean;\n    isWeekend: boolean;\n    isHoliday: boolean;\n  }[];\n  locale: object;\n  placeholder: string;\n  addClass: AddClass;\n  addStyle: { [k: string]: any } | null;\n  fieldId: string;\n  useEmptyBarTitle: boolean;\n  disabled: boolean;\n\n  private onTouchedCallback: () => void = () => { };\n  private onChangeCallback: (_: any) => void = () => { };\n\n  public setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  get value(): Date {\n    return this.innerValue;\n  }\n\n  set value(val: Date) {\n    this.innerValue = val;\n    this.onChangeCallback(this.innerValue);\n  }\n\n  constructor(private elementRef: ElementRef) {\n    this.scrollOptions = {\n      barBackground: '#DFE3E9',\n      gridBackground: '#FFFFFF',\n      barBorderRadius: '3',\n      gridBorderRadius: '3',\n      barWidth: '6',\n      gridWidth: '6',\n      barMargin: '0',\n      gridMargin: '0'\n    };\n  }\n\n  ngOnInit() {\n    this.view = 'year';\n    this.date = new Date();\n    this.setOptions();\n    this.initDayNames();\n    this.initYears();\n    this.initMonthName();\n\n    // Check if 'position' property is correct\n    if (this.positions.indexOf(this.position) === -1) {\n      throw new TypeError(`ng-moderndatepicker: invalid position property value '${this.position}' (expected: ${this.positions.join(', ')})`);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('options' in changes) {\n      this.setOptions();\n      this.initDayNames();\n      this.init();\n      this.initYears();\n    }\n  }\n\n  get defaultFieldId(): string {\n    // Only evaluate and increment if required\n    const value = `datepicker-${counter++}`;\n    Object.defineProperty(this, 'defaultFieldId', {value});\n\n    return value;\n  }\n\n  setOptions(): void {\n    const today = new Date(); // this const was added because during my tests, I noticed that at this level this.date is undefined\n    this.minYear = this.options && this.options.minYear || getYear(today) - 30;\n    this.maxYear = this.options && this.options.maxYear || getYear(today) + 30;\n    this.displayFormat = this.options && this.options.displayFormat || 'MMM D[,] YYYY';\n    this.barTitleFormat = this.options && this.options.barTitleFormat || 'YYYY';\n    this.dayNamesFormat = this.options && this.options.dayNamesFormat || 'ddd';\n    this.monthNamesFormat = this.options && this.options.monthNamesFormat || 'MMM';\n    this.barTitleIfEmpty = this.options && this.options.barTitleIfEmpty || 'Click to select a date';\n    this.firstCalendarDay = this.options && this.options.firstCalendarDay || 0;\n    this.locale = this.options && { locale: this.options.locale } || {};\n    this.placeholder = this.options && this.options.placeholder || '';\n    this.addClass = this.options && this.options.addClass || {};\n    this.addStyle = this.options && this.options.addStyle || {};\n    this.fieldId = this.options && this.options.fieldId || this.defaultFieldId;\n    this.useEmptyBarTitle = this.options && 'useEmptyBarTitle' in this.options ? this.options.useEmptyBarTitle : true;\n  }\n\n  nextYear(): void {\n    this.date = addYears(this.date, 1);\n    this.init();\n    this.initMonthName();\n\n  }\n\n  prevYear(): void {\n    this.date = subYears(this.date, 1);\n    this.init();\n    this.initMonthName();\n\n  }\n\n  setDate(i: number): void {\n    this.date = this.days[i].date;\n    this.value = this.date;\n    this.init();\n    this.close();\n  }\n\n  setYear(i: number): void {\n    this.date = setYear(this.date, this.years[i].year);\n    this.init();\n    this.view = 'year';\n  }\n\n  selectMonth(i: number): void {\n    this.date = setMonth(this.date,i);\n    this.init();\n    this.initMonthName();\n    this.view = 'year';\n  }\n  /**\n   * Checks if specified date is in range of min and max dates\n   * @param date\n   */\n  private isDateSelectable(date: Date): boolean {\n    if (isNil(this.options)) {\n      return true;\n    }\n\n    const minDateSet = !isNil(this.options.minDate);\n    const maxDateSet = !isNil(this.options.maxDate);\n\n    const timestamp = date.valueOf();\n\n    if (minDateSet && (timestamp < this.options.minDate.valueOf())) {\n      return false;\n    }\n\n    if (maxDateSet && (timestamp > this.options.maxDate.valueOf())) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private isWeekendDay (date: Date): boolean {\n    const weekendsDay = Array.isArray(this.options.weekendsDay);\n    if(weekendsDay) {\n      return this.options.weekendsDay.indexOf(getDay(date)) != -1 ? true : false;\n    }\n\n    return false;\n  }\n\n  private isHoliday (date: Date): boolean {\n    const areHolidays = Array.isArray(this.options.holidayList);\n    if(areHolidays) {\n      return (this.options.holidayList.filter((day)=> isSameDay(day,date))).length ? true : false;\n    }\n\n    return false;\n  }\n\n  init(): void {\n    // this.date may be null after .reset(); fall back to current date.\n    const actualDate = this.date || new Date();\n    const start = startOfMonth(actualDate);\n    const end = endOfMonth(actualDate);\n\n    this.days = eachDay(start, end).map(date => {\n      return {\n        date: date,\n        day: getDate(date),\n        month: getMonth(date),\n        year: getYear(date),\n        inThisMonth: true,\n        isToday: isToday(date),\n        isSelected: isSameDay(date, this.innerValue) && isSameMonth(date, this.innerValue) && isSameYear(date, this.innerValue),\n        isSelectable: this.isDateSelectable(date),\n        isWeekend: this.isWeekendDay(date),\n        isHoliday: this.isHoliday(date)\n      };\n    });\n\n    const tmp = getDay(start) - this.firstCalendarDay;\n    const prevDays = tmp < 0 ? 7 - this.firstCalendarDay : tmp;\n\n    for (let i = 1; i <= prevDays; i++) {\n      const date = subDays(start, i);\n      this.days.unshift({\n        date: date,\n        day: getDate(date),\n        month: getMonth(date),\n        year: getYear(date),\n        inThisMonth: false,\n        isToday: isToday(date),\n        isSelected: isSameDay(date, this.innerValue) && isSameMonth(date, this.innerValue) && isSameYear(date, this.innerValue),\n        isSelectable: this.isDateSelectable(date),\n        isWeekend : this.isWeekendDay(date),\n        isHoliday: this.isHoliday(date)\n      });\n    }\n\n    if (this.innerValue) {\n      this.displayValue = format(this.innerValue, this.displayFormat, this.locale);\n      this.barTitle = format(start, this.barTitleFormat, this.locale);\n    } else {\n      this.displayValue = '';\n      this.barTitle = this.useEmptyBarTitle ? this.barTitleIfEmpty : format(start, this.barTitleFormat, this.locale);\n    }\n  }\n\n  initYears(): void {\n    const range = this.maxYear - this.minYear;\n    this.years = Array.from(new Array(range), (x, i) => i + this.minYear).map(year => {\n      return {\n        year: year,\n        isThisYear: year === getYear(this.date),\n        isToday : year === getYear(new Date()),\n        isSelectable: this.isYearSelectable(year)\n        };\n    });\n  }\n\n  private isYearSelectable(date: any) : boolean {\n     const minDate = isNil(this.options.minDate) ? false : this.options.minDate;\n     const maxDate = isNil(this.options.maxDate) ? false : this.options.maxDate;\n\n     if ( minDate && maxDate ) {\n       return minDate.getFullYear() <= date && date <= maxDate.getFullYear();\n     } else if (minDate) {\n       return  minDate.getFullYear() <= date;\n     } else if (maxDate) {\n        return  date <= maxDate.getFullYear();\n     }\n     return true;\n  }\n\n  initDayNames(): void {\n    this.dayNames = [];\n    const start = this.firstCalendarDay;\n    for (let i = start; i <= 6 + start; i++) {\n      const date = setDay(new Date(), i);\n      this.dayNames.push(format(date, this.dayNamesFormat, this.locale));\n    }\n  }\n\n  initMonthName(): void {\n    let monthNames = [];\n    let currentDate = new Date(this.date);\n    const start = subYears(currentDate.setMonth(11),1);\n    for (let i = 1; i <= 12 ; i++) {\n      const date = addMonths(start, i);\n      monthNames.push({\n        name: format(date, this.monthNamesFormat, this.locale),\n        isSelected: date.getMonth() === this.date.getMonth(),\n        isThisMonth: isSameMonth(date,new Date()) && isSameYear(this.date,new Date()),\n        isSelectable: this.isMonthSelectable(date)\n      });\n    }\n    this.monthNames = monthNames;\n  }\n\n  private isMonthSelectable(date: Date): boolean {\n\n      const minDate = isNil(this.options.minDate) ? false : this.options.minDate;\n      const maxDate = isNil(this.options.maxDate) ? false : this.options.maxDate;\n\n      if ( minDate && maxDate ) {\n        if(minDate.getFullYear() < date.getFullYear() && date.getFullYear() < maxDate.getFullYear()){\n            return true;\n        } else if (minDate.getFullYear() < date.getFullYear() && date.getFullYear() == maxDate.getFullYear()){\n            if(date.getMonth() <= maxDate.getMonth()){\n              return true;\n            } else { return false;}\n        } else if (minDate.getFullYear() == date.getFullYear() && date.getFullYear() < maxDate.getFullYear()){\n            if(minDate.getMonth() <= date.getMonth()){\n              return true;\n            } else { return false;}\n        } else if (minDate.getFullYear() == date.getFullYear() && date.getFullYear() == maxDate.getFullYear()){\n            if(minDate.getMonth() <= date.getMonth() && date.getMonth() <= maxDate.getMonth()){\n              return true;\n            } else { return false;}\n        } else {\n             return false;\n        }\n      } else if (minDate) {\n        if(minDate.getFullYear() < date.getFullYear()){\n            return true;\n        } else if (minDate.getFullYear() == date.getFullYear()){\n            if(minDate.getMonth() <= date.getMonth()){\n              return true;\n            } else { return false;}\n        } else {\n             return false;\n        }\n      } else if (maxDate) {\n         if(date.getFullYear() < maxDate.getFullYear()){\n             return true;\n         } else if (date.getFullYear() == maxDate.getFullYear()){\n             if(date.getMonth() <= maxDate.getMonth()){\n               return true;\n             } else { return false;}\n         } else {\n              return false;\n         }\n      }\n\n    return true;\n  }\n\n  toggleView(): void {\n    this.view = this.view === 'year' ? 'years' : 'year';\n  }\n\n  toggle(): void {\n    this.isOpened = !this.isOpened;\n\n    if (!this.isOpened && this.view === 'years') {\n      this.toggleView();\n    }\n  }\n\n  close(): void {\n    this.isOpened = false;\n\n    if (this.view === 'years') {\n      this.toggleView();\n    }\n  }\n\n  reset(fireValueChangeEvent = false): void {\n    this.date = null;\n    this.innerValue = null;\n    this.init();\n    if (fireValueChangeEvent && this.onChangeCallback) {\n      this.onChangeCallback(this.innerValue);\n    }\n  }\n\n  writeValue(val: Date) {\n    if (val) {\n      this.date = val;\n      this.innerValue = val;\n      this.init();\n      this.displayValue = format(this.innerValue, this.displayFormat, this.locale);\n      this.barTitle = format(startOfMonth(val), this.barTitleFormat, this.locale);\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  @HostListener('document:click', ['$event']) onBlur(e: MouseEvent) {\n    if (!this.isOpened) {\n      return;\n    }\n\n    const input = this.elementRef.nativeElement.querySelector('.ngx-moderndatepicker-input');\n\n    if (input == null) {\n      return;\n    }\n\n    if (e.target === input || input.contains(<any>e.target)) {\n      return;\n    }\n\n    const container = this.elementRef.nativeElement.querySelector('.ngx-moderndatepicker-calendar-container');\n    if (container && container !== e.target && !container.contains(<any>e.target) && !(<any>e.target).classList.contains('year-unit') && !(<any>e.target).classList.contains('month-unit')) {\n      this.close();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { NgxModerndatepickerComponent } from './ngx-moderndatepicker.component';\n\n\n@NgModule({\n  declarations: [NgxModerndatepickerComponent],\n  imports: [\n   CommonModule,\n   BrowserModule,\n   FormsModule\n  ],\n  exports: [NgxModerndatepickerComponent]\n})\nexport class NgxModerndatepickerModule { }\n"],"names":[],"mappings":"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"}